---
    Organizations:

        - &OrdererOrg
            Name: OrdererOrg
            ID: OrdererMSP
            MSPDir: crypto-config/ordererOrganizations/herec.uit/msp
            Policies:
                Readers:
                    Type: Signature
                    Rule: "OR('OrdererMSP.member')"
                Writers:
                    Type: Signature
                    Rule: "OR('OrdererMSP.member')"
                Admins:
                    Type: Signature
                    Rule: "OR('OrdererMSP.admin')"
    
        - &Client
            Name: ClientMSP
            ID: ClientMSP
            MSPDir: crypto-config/peerOrganizations/client.herec.uit/msp
            Policies:
                Readers:
                    Type: Signature
                    Rule: "OR('ClientMSP.admin', 'ClientMSP.peer', 'ClientMSP.client')"
                Writers:
                    Type: Signature
                    Rule: "OR('ClientMSP.admin', 'ClientMSP.client')"
                Admins:
                    Type: Signature
                    Rule: "OR('ClientMSP.admin')"
            AnchorPeers:
                - Host: peer0.client.herec.uit
                  Port: 7051
    
        - &Quan12
            Name: Quan12MSP
            ID: Quan12MSP
            MSPDir: crypto-config/peerOrganizations/quan12.herec.uit/msp
            Policies:
                Readers:
                    Type: Signature
                    Rule: "OR('Quan12MSP.admin', 'Quan12MSP.peer', 'Quan12MSP.client')"
                Writers:
                    Type: Signature
                    Rule: "OR('Quan12MSP.admin', 'Quan12MSP.client')"
                Admins:
                    Type: Signature
                    Rule: "OR('Quan12MSP.admin')"
    
            AnchorPeers:
                - Host: peer0.quan12.herec.uit
                  Port: 9051

    Capabilities:
        Channel: &ChannelCapabilities
            V1_4_3: true
            V1_3: false
            V1_1: false
    
     
        Orderer: &OrdererCapabilities
            # V1.4.2 for Orderer is a catchall flag for behavior which has been
            # determined to be desired for all orderers running at the v1.4.2
            # level, but which would be incompatible with orderers from prior releases.
            # Prior to enabling V1.4.2 orderer capabilities, ensure that all
            # orderers on a channel are at v1.4.2 or later.
            V1_4_2: true
            # V1.1 for Orderer enables the new non-backwards compatible
            # features and fixes of fabric v1.1
            V1_1: false
    
        # Application capabilities apply only to the peer network, and may be safely
        # used with prior release orderers.
        # Set the value of the capability to true to require it.
        Application: &ApplicationCapabilities
            # V1.4.2 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.4.2.
            V1_4_2: true
            # V1.3 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.3.
            V1_3: false
            # V1.2 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.2 (note, this need not be set if
            # later version capabilities are set)
            V1_2: false
            # V1.1 for Application enables the new non-backwards compatible
            # features and fixes of fabric v1.1 (note, this need not be set if
            # later version capabilities are set).
            V1_1: false
    
    ################################################################################
    #
    #   SECTION: Application
    #
    #   - This section defines the values to encode into a config transaction or
    #   genesis block for application related parameters
    #
    ################################################################################
    Application: &ApplicationDefaults
    
        # Organizations is the list of orgs which are defined as participants on
        # the application side of the network
        Organizations:
    
        # Policies defines the set of policies at this level of the config tree
        # For Application policies, their canonical path is
        #   /Channel/Application/<PolicyName>
        Policies:
            Readers:
                Type: ImplicitMeta
                Rule: "ANY Readers"
            Writers:
                Type: ImplicitMeta
                Rule: "ANY Writers"
            Admins:
                Type: ImplicitMeta
                Rule: "MAJORITY Admins"
    
        Capabilities:
            <<: *ApplicationCapabilities
    ################################################################################
    #
    #   SECTION: Orderer
    #
    #   - This section defines the values to encode into a config transaction or
    #   genesis block for orderer related parameters
    #
    ################################################################################
    Orderer: &OrdererDefaults
    
        # Orderer Type: The orderer implementation to start
        # Available types are "solo","kafka"  and "etcdraft"
        OrdererType: solo
    
        Addresses:
            - orderer.herec.uit:7050
    
        # Batch Timeout: The amount of time to wait before creating a batch
        BatchTimeout: 2s
    
        # Batch Size: Controls the number of messages batched into a block
        BatchSize:
    
            # Max Message Count: The maximum number of messages to permit in a batch
            MaxMessageCount: 10
    
            # Absolute Max Bytes: The absolute maximum number of bytes allowed for
            # the serialized messages in a batch.
            AbsoluteMaxBytes: 99 MB
    
            # Preferred Max Bytes: The preferred maximum number of bytes allowed for
            # the serialized messages in a batch. A message larger than the preferred
            # max bytes will result in a batch larger than preferred max bytes.
            PreferredMaxBytes: 512 KB
    
        Kafka:
            # Brokers: A list of Kafka brokers to which the orderer connects
            # NOTE: Use IP:port notation
            Brokers:
                - 127.0.0.1:9092
    
        # EtcdRaft defines configuration which must be set when the "etcdraft"
        # orderertype is chosen.
        EtcdRaft:
            # The set of Raft replicas for this network. For the etcd/raft-based
            # implementation, we expect every replica to also be an OSN. Therefore,
            # a subset of the host:port items enumerated in this list should be
            # replicated under the Orderer.Addresses key above.
            Consenters:
                - Host: orderer.herec.uit
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer.herec.uit/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer.herec.uit/tls/server.crt
                - Host: orderer2.herec.uit
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer2.herec.uit/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer2.herec.uit/tls/server.crt
                - Host: orderer3.herec.uit
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer3.herec.uit/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer3.herec.uit/tls/server.crt
                - Host: orderer4.herec.uit
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer4.herec.uit/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer4.herec.uit/tls/server.crt
                - Host: orderer5.herec.uit
                  Port: 7050
                  ClientTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer5.herec.uit/tls/server.crt
                  ServerTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer5.herec.uit/tls/server.crt
    
        # Organizations is the list of orgs which are defined as participants on
        # the orderer side of the network
        Organizations:
    
        # Policies defines the set of policies at this level of the config tree
        # For Orderer policies, their canonical path is
        #   /Channel/Orderer/<PolicyName>
        Policies:
            Readers:
                Type: ImplicitMeta
                Rule: "ANY Readers"
            Writers:
                Type: ImplicitMeta
                Rule: "ANY Writers"
            Admins:
                Type: ImplicitMeta
                Rule: "MAJORITY Admins"
            # BlockValidation specifies what signatures must be included in the block
            # from the orderer for the peer to validate it.
            BlockValidation:
                Type: ImplicitMeta
                Rule: "ANY Writers"
    
    ################################################################################
    #
    #   CHANNEL
    #
    #   This section defines the values to encode into a config transaction or
    #   genesis block for channel related parameters.
    #
    ################################################################################
    Channel: &ChannelDefaults
        # Policies defines the set of policies at this level of the config tree
        # For Channel policies, their canonical path is
        #   /Channel/<PolicyName>
        Policies:
            # Who may invoke the 'Deliver' API
            Readers:
                Type: ImplicitMeta
                Rule: "ANY Readers"
            # Who may invoke the 'Broadcast' API
            Writers:
                Type: ImplicitMeta
                Rule: "ANY Writers"
            # By default, who may modify elements at this config level
            Admins:
                Type: ImplicitMeta
                Rule: "MAJORITY Admins"
    
        # Capabilities describes the channel level capabilities, see the
        # dedicated Capabilities section elsewhere in this file for a full
        # description
        Capabilities:
            <<: *ChannelCapabilities
    
    ################################################################################
    #
    #   Profile
    #
    #   - Different configuration profiles may be encoded here to be specified
    #   as parameters to the configtxgen tool
    #
    ################################################################################
    Profiles:
    
        TwoOrgsOrdererGenesis:
            <<: *ChannelDefaults
            Orderer:
                <<: *OrdererDefaults
                Organizations:
                    - *OrdererOrg
                Capabilities:
                    <<: *OrdererCapabilities
            Consortiums:
                SampleConsortium:
                    Organizations:
                        - *Client
                        - *Quan12
        TwoOrgsChannel:
            Consortium: SampleConsortium
            <<: *ChannelDefaults
            Application:
                <<: *ApplicationDefaults
                Organizations:
                    - *Client
                    - *Quan12
                Capabilities:
                    <<: *ApplicationCapabilities
    
        SampleDevModeKafka:
            <<: *ChannelDefaults
            Capabilities:
                <<: *ChannelCapabilities
            Orderer:
                <<: *OrdererDefaults
                OrdererType: kafka
                Kafka:
                    Brokers:
                    - kafka.herec.uit:9092
    
                Organizations:
                - *OrdererOrg
                Capabilities:
                    <<: *OrdererCapabilities
            Application:
                <<: *ApplicationDefaults
                Organizations:
                - <<: *OrdererOrg
            Consortiums:
                SampleConsortium:
                    Organizations:
                    - *Client
                    - *Quan12
    
        SampleMultiNodeEtcdRaft:
            <<: *ChannelDefaults
            Capabilities:
                <<: *ChannelCapabilities
            Orderer:
                <<: *OrdererDefaults
                OrdererType: etcdraft
                EtcdRaft:
                    Consenters:
                    - Host: orderer.herec.uit
                      Port: 7050
                      ClientTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer.herec.uit/tls/server.crt
                      ServerTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer.herec.uit/tls/server.crt
                    - Host: orderer2.herec.uit
                      Port: 7050
                      ClientTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer2.herec.uit/tls/server.crt
                      ServerTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer2.herec.uit/tls/server.crt
                    - Host: orderer3.herec.uit
                      Port: 7050
                      ClientTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer3.herec.uit/tls/server.crt
                      ServerTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer3.herec.uit/tls/server.crt
                    - Host: orderer4.herec.uit
                      Port: 7050
                      ClientTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer4.herec.uit/tls/server.crt
                      ServerTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer4.herec.uit/tls/server.crt
                    - Host: orderer5.herec.uit
                      Port: 7050
                      ClientTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer5.herec.uit/tls/server.crt
                      ServerTLSCert: crypto-config/ordererOrganizations/herec.uit/orderers/orderer5.herec.uit/tls/server.crt
                Addresses:
                    - orderer.herec.usedit:7050
                    - orderer2.herec.uit:7050
                    - orderer3.herec.uit:7050
                    - orderer4.herec.uit:7050
                    - orderer5.herec.uit:7050
    
                Organizations:
                - *OrdererOrg
                Capabilities:
                    <<: *OrdererCapabilities
            Application:
                <<: *ApplicationDefaults
                Organizations:
                - <<: *OrdererOrg
            Consortiums:
                SampleConsortium:
                    Organizations:
                    - *Client
                    - *Quan12
    