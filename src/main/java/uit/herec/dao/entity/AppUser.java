package uit.herec.dao.entity;
// default package
// Generated Jan 31, 2020 4:45:21 PM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * AppUser generated by hbm2java
 */
@Entity
@Table(name = "app_user", catalog = "herec_uit", uniqueConstraints = @UniqueConstraint(columnNames = "phone_number"))
public class AppUser extends DateAudit {

    private static final long serialVersionUID = 3703580895520362812L;
    private Integer id;
    private AppRole appRole;
    private String phoneNumber;
    private String fullname;
    private String address;
    private Date dob;
    private String password;
    private String hyperledgerName;
    private String peerName;
    private String port;
    private Set<Organization> organizations = new HashSet<Organization>(0);
    private Set<Appointment> appointments = new HashSet<Appointment>(0);
    private Set<Diagnosis> diagnosises = new HashSet<Diagnosis>(0);

    public AppUser() {
    }

    public AppUser(AppRole appRole, String phoneNumber, String password, String hyperledgerName) {
        this.appRole = appRole;
        this.phoneNumber = phoneNumber;
        this.password = password;
        this.hyperledgerName = hyperledgerName;
    }

    public AppUser(AppRole appRole, String phoneNumber, String fullname, String address, Date dob, String password,
            String hyperledgerName, Set<Organization> organizations, Set<Appointment> appointments,
            Set<Diagnosis> diagnosises) {
        this.appRole = appRole;
        this.phoneNumber = phoneNumber;
        this.fullname = fullname;
        this.address = address;
        this.dob = dob;
        this.password = password;
        this.hyperledgerName = hyperledgerName;
        this.organizations = organizations;
        this.appointments = appointments;
        this.diagnosises = diagnosises;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_role", nullable = false)
    public AppRole getAppRole() {
        return this.appRole;
    }

    public void setAppRole(AppRole appRole) {
        this.appRole = appRole;
    }

    @Column(name = "phone_number", unique = true, nullable = false, length = 10)
    public String getPhoneNumber() {
        return this.phoneNumber;
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    @Column(name = "fullname", length = 65535)
    public String getFullname() {
        return this.fullname;
    }

    public void setFullname(String fullname) {
        this.fullname = fullname;
    }

    @Column(name = "address", length = 65535)
    public String getAddress() {
        return this.address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "dob", length = 19)
    public Date getDob() {
        return this.dob;
    }

    public void setDob(Date dob) {
        this.dob = dob;
    }

    @Column(name = "password", nullable = false, length = 65535)
    public String getPassword() {
        return this.password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    @Column(name = "hyperledger_name", nullable = false, length = 65535)
    public String getHyperledgerName() {
        return this.hyperledgerName;
    }

    public void setHyperledgerName(String hyperledgerName) {
        this.hyperledgerName = hyperledgerName;
    }

    @ManyToMany(fetch = FetchType.EAGER)
    @JoinTable(name = "permission", catalog = "herec_uit", joinColumns = {
            @JoinColumn(name = "id_user", nullable = false, updatable = false) }, inverseJoinColumns = {
                    @JoinColumn(name = "id_org", nullable = false, updatable = false) })
    public Set<Organization> getOrganizations() {
        return this.organizations;
    }

    public void setOrganizations(Set<Organization> organizations) {
        this.organizations = organizations;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
    public Set<Appointment> getAppointments() {
        return this.appointments;
    }

    public void setAppointments(Set<Appointment> appointments) {
        this.appointments = appointments;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "appUser")
    public Set<Diagnosis> getDiagnosises() {
        return this.diagnosises;
    }

    public void setDiagnosises(Set<Diagnosis> diagnosises) {
        this.diagnosises = diagnosises;
    }

    public String getPeerName() {
        return peerName;
    }

    @Column(name = "peer_name")
    public void setPeerName(String peerName) {
        this.peerName = peerName;
    }

    public String getPort() {
        return port;
    }

    @Column(name = "peer_port")
    public void setPort(String port) {
        this.port = port;
    }
    
    

}
